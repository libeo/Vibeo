// Table of Contents 
// ------------------------------------------ 
// ::Import Compass

// ::Variables
    // ::Media folder
    // ::Player default
    // ::FX
    // ::Components
    // ::Fonts
    // ::Player config

// ::Mixins
// ::Functions
// ::Import Vibéo basic styles
// ::Overwrite

// ::Imports Compass 
// ------------------------------------------ 
@import "compass";

// ::Variables 
// ------------------------------------------ 


// ::Media folder
$main-media-folder      : 'controls/vbo-dark';

// ::Player default
$img-background         : "background.png";
$img-play               : "bigplay.png";
$img-loading            : "loading.gif";

// ::FX
$turn-on-the-noise      : true; // < Set to true / false to toggle background noise in your control bar
$img-noise              : 'noise.png';

// ::Components < Use name of icon only, no need for the ext or the path. Files must use the same name
$cmp-play               : 'play';
$cmp-pause              : 'pause';
$cmp-stop               : 'stop';
$cmp-mute               : 'mute';
$cmp-unmute             : 'unmute';
$cmp-caption            : 'caption';
$cmp-fullscreen         : 'fullscreen';
$cmp-unfullscreen       : 'unfullscreen';
$cmp-volume-up          : 'volume_up';
$cmp-volume-down        : 'volume_down';
$cmp-rail-rewind        : 'rail_rewind';
$cmp-rail-forward       : 'rail_forward';
$cmp-backlight-on       : 'backlighton';
$cmp-backlight-off      : 'backlightoff';
$cmp-loop-on            : 'loopon';
$cmp-loop-off           : 'loopoff';
$cmp-picturecontrols    : 'picturecontrols';
$cmp-tooltip            : 'tooltip';

// ::Fonts
$font-main              : Arial, Helvetica, sans-serif;
$font-main-size         : 0.688em;
$font-main-color        : #FFFFFF;
$font-main-weight       : normal;
$font-caption-size      : 1em;
$font-base-size         : 16px;

// ::Specific images for this skin < Value can either be set to false or the name of the image used
$separator-img          : 'bkg-separator';
$vol-arrow-img          : 'volume_box_arrow';

// ::Loading overlay
$ovl-loading-start      : #323232;
$ovl-loading-end        : #000000;
$ovl-loading-opacity    : 0.9;

// ::Tooltip
$tooltip-bg-color       : #ffffff;
$tooltip-font-color     : #000000;

// ::Background controls
$bkg-controls-start     : #4f4f4f;
$bkg-controls-end       : #2e2e2e;
$bkg-controls-opacity   : 1;

// ::Background controls buttons on focus
$buttons-focus-bg       : #666;
$buttons-active-bg      : #2f2f2f;

// ::Volume controls
$vol-plus-minus-bg      : #000000;
$vol-plus-minus-opacity : 0.3;
$vol-slider-bg          : #222;
$vol-total-bg           : #fff;
$vol-current-bg         : #fff;
$vol-handle-bg          : #fff;
$vol-slider-opacity     : 0.8;
$vol-total-opacity      : 1;
$vol-current-opacity    : 0.9;
$vol-handle-opacity     : 1;

// ::Total time bar
$total-time-start       : #2a2a2a;
$total-time-end         : #2a2a2a;
$total-time-border      : #2a2a2a;

// ::Buffer bar
$bkg-buffer             : #ffffff;
$buffer-opacity         : 0.15;
$buffer-start           : #ddd;
$buffer-end             : #ddd;
$buffer-grdt-opacity    : 0.2;

// ::Loaded time progess bar
$time-loaded-start      : #5b5b5b;
$time-loaded-end        : #5b5b5b;

// ::Current time  bar
$time-current-start     : #7edefd;
$time-current-end       : #27abdd;

// ::Time rail opacity
$time-rail-opacity      : 1;

// ::Time hanfle show / hide
$time-handle-opacity    : 1;

// ::Rewind/forward
$time-nav-bg            : transparent;

// ::Chapters
$chapter-start          : #666666 ;
$chapter-end            : #000000;
$chapter-opacity        : 0.7;
$chapter-hover-start    : #666666;
$chapter-hover-end      : #323232;
$chapter-hover-opacity  : 0.6;


// ::Mixins 
// ------------------------------------------ 

@mixin bkg( $start, $end, $opacity ) {
    @include background-image( linear-gradient( rgba( $start, $opacity ), rgba( $end, $opacity ) ) );
    @include filter-gradient( $start, $end );  
}

@mixin load-component( $imgName, $ext: svg, $pos:'' ) {
    background: transparent url( get-img( $imgName, $ext ) ) no-repeat #{ $pos };
    
    // ::Check if component is in svg
    @if( $ext == svg ) {
        background-size: contain;
        &:focus { 
            background-color: $buttons-focus-bg; 
        }  
    }
}

@mixin custom-animation {
    @-webkit-keyframes buffering-stripes { from {background-position: 0 0;} to {background-position: 30px 0;} }
    @-moz-keyframes buffering-stripes { from {background-position: 0 0;} to {background-position: 30px 0;} }
    @-ms-keyframes buffering-stripes { from {background-position: 0 0;} to {background-position: 30px 0;} }
    @-o-keyframes buffering-stripes { from {background-position: 0 0;} to {background-position: 30px 0;} }
    @keyframes buffering-stripes { from {background-position: 0 0;} to {background-position: 30px 0;} }
}

@mixin separator { 
    background: url( get-img( $separator-img, png ) ) repeat-y; 
    content: ''; 
    height: 1.188em; 
    padding: 6px 0; 
    position: absolute; 
    width: 0.125em; 
}

@mixin separator-after( $top: 0, $right: 0 ) {
    right: $right; 
    top: $top;
    @include separator;
}

@mixin separator-before( $top: 0, $left: 0 ) {
    left: $left; 
    top: $top;  
    @include separator;
}


// ::Functions 
// ------------------------------------------ 

@function get-img( $imgName, $ext ) {
    @return '#{ $main-media-folder }/#{ $imgName }.#{ $ext }';
}

@function emify( $target, $base: $font-base-size ) {
    $values: ();
    $baseFixed: remove-px( $base );
    
    @if type-of( $target ) == list {
        // $values will return element with type list
        @each $t in $target {
            $tFixed: remove-px( $t );
            $values: append( $values, if( type-of( $tFixed ) == number, ( $tFixed / $baseFixed ) + 0em, $tFixed ) );
        }        
    } @else {
        // $values will return element with type number
        $values: ( remove-px( $target ) / $baseFixed ) + 0em;
    }

    @return $values;
}

@function remove-px( $target ) {
    @if not unitless( $target ) {
        @return $target / 1px ;
    } @else {
        @return $target;
    }
}

@function pxEm( $target, $context: $font-base-size ){
    @return ( remove-px( $target )/remove-px( $context ) ) + 0em;
}

// ::Vibéo basic styles 
// ------------------------------------------ 

.mejs-time-float-current { 
    font-size: $font-main-size; 
}
.mejs-time-total { 
    border: 1px solid $total-time-border; 
}
.mejs-container { 
    background: #000; 
    font: 1.1em $font-main; 
    position: relative; 
}
.me-plugin { 
    position: absolute; 
}
.mejs-embed {
    background: #000; 
    height: 100%; 
    margin: 0; 
    overflow: hidden; 
    padding: 0; 
    width: 100%;
    body { 
        background: #000; 
        height: 100%; 
        margin: 0; 
        overflow: hidden; 
        padding: 0; 
        width: 100%; 
    } 
}
.mejs-container-fullscreen { 
    bottom: 0; 
    left: 0; 
    overflow: hidden; 
    position: fixed; 
    right: 0; 
    top: 0; 
    z-index: 1000;
    .mejs-mediaelement, 
    video { 
        width: 100%; 
        height: 100%; 
    } 
}
.mejs-background { 
    left: 0; 
    position: absolute; 
    top: 0; 
}
.mejs-mediaelement { 
    height: 100%; 
    left: 0; 
    position: absolute; 
    top: 0; 
    width: 100%; 
}
.mejs-poster {
    left: 0; 
    position: absolute; 
    top: 0;
    img { 
        border: 0; 
        display: block; 
        padding: 0; 
    } 
}
.mejs-overlay { 
    left: 0; 
    position: absolute; 
    top: 0;
    &:hover .mejs-overlay-button { 
        background-position: 0 -100px; 
    } 
}
.mejs-overlay-play { 
    cursor: pointer; 
}
.mejs-overlay-button { 
    background: url( $img-play ) no-repeat; 
    height: 100px; left: 50%; 
    margin: -50px 0 0 -50px; 
    position: absolute; 
    top: 50%; 
    width: 100px; 
}
.mejs-overlay-loading {
    background: mix( $ovl-loading-start, $ovl-loading-end ); 
    background: rgba( $ovl-loading-end, $ovl-loading-opacity ); 
    height: 80px; 
    left: 50%; 
    margin: -40px 0 0 -40px; 
    position: absolute; 
    top: 50%; 
    width: 80px;
    @include bkg( $ovl-loading-start, $ovl-loading-end, $ovl-loading-opacity );
    span { 
        background: transparent url( $img-loading ) 50% 50% no-repeat; 
        display: block; 
        height: 80px; 
        width: 80px; 
    } 
}
.mejs-container, 
.mejs-controls { 
    // @include border-bottom-radius( 5px ); 
}
.mejs-container .mejs-controls {
    background: none; 
    background: rgba( $bkg-controls-end, $bkg-controls-opacity ); 
    bottom: 0; 
    left: 0; 
    list-style-type: none; 
    margin: 0; 
    // padding: 5px 0; 
    position: absolute; 
    width: 100%;
    @include bkg( $bkg-controls-start, $bkg-controls-end, $bkg-controls-opacity );  
    div { 
        background: 0; 

        $turn-on-the-noise: false !default;
        @if $turn-on-the-noise {
            background-image: url( $img-noise  ); 
        }
        
        border: 0; 
        display: inline-block; 
        font: 0.917em $font-main; 
        list-style-type: none; 
        margin: 0; 
        vertical-align: middle; 
    } 
}
.mejs-controls button, 
.mejs-tooltip button { 
    border: 0; 
    cursor: pointer; 
    display: block; 
    font-size: 100%; 
    height: 1.200em; 
    line-height: 0; 
    margin: 0.1em; 
    text-decoration: none; 
    width: 1.1em; 
}
.mejs-container .mejs-controls {
    > div { 
        display: table-cell; 
        padding: 5px 8px; 
        text-align: center; 
    }
    .mejs-time-rail { 
        padding: 0; 
    }
    .mejs-time {
        color: $font-main-color; 
        text-align: center;
        span { 
            color: $font-main-color; 
            font-size: $font-main-size; 
            font-weight: bold; 
        }
        .mejs-currenttime,
        .mejs-duration{
            position: relative;
            bottom: 1px;
        }
    }
}
// ::Tooltip
.mejs-tooltip {
    position: absolute; 
    right: 5px; 
    top: 5px; 
    z-index: 1000;
    button {
        background: transparent url( $cmp-tooltip ) no-repeat; 
        filter: alpha( opacity = 20 ); 
        height: 0.6em; 
        position: absolute; 
        opacity: 0.2; 
        right: 5px; 
        top: 5px; 
        width: 0.6em; 
        &:focus, 
        &:hover { 
            filter: alpha( opacity = 100 ); 
            opacity: 1; 
        }
    }
}
.bubble-text { 
    background-color: $tooltip-bg-color; 
    border-radius: 10px; 
    bottom: -1.3em; 
    color: $tooltip-font-color; 
    display: none; 
    font-size: 0.6em; 
    line-height: 1em; 
    max-width: 8em; 
    padding: 0.4em; 
    position: absolute; 
    right: 0.8em; 
    text-align: left; 
    z-index: 1001; 
}
// ::Controls
.mejs-controls {
    button {
        overflow: visible;
    }
    .mejs-play button { 
        @include load-component( $cmp-play );
    }
    .mejs-pause button { 
        @include load-component( $cmp-pause ); 
    }
    .mejs-stop button { 
        @include load-component( $cmp-stop );
    }
    .mejs-fullscreen-button button { 
        @include load-component( $cmp-fullscreen );
    }
    .mejs-unfullscreen button { 
        @include load-component( $cmp-unfullscreen );
    }
    .mejs-mute button { 
        @include load-component( $cmp-mute );
    }
    .mejs-unmute button { 
        @include load-component( $cmp-unmute ); 
    }
    .mejs-playpause-button button {
        // ::Check if separator variable is set
        $separator-img: false !default;
        @if $separator-img {
            position: relative;
            &:after { 
                @include separator-after( -6px, -6px ); 
            }
        }
    }
    .mejs-volume-button > button {
        // ::Check if separator variable is set
        margin-top: 2px;
        $separator-img: false !default;
        @if $separator-img {
            position: relative;
            &:after { 
                @include separator-after( -6px, -11px ); 
            }
        }
    }
    .mejs-captions-button button {
        @include load-component( $cmp-caption ); 
        margin-top: 2px;
        // ::Check if separator variable is set
        $separator-img: false !default;
        @if $separator-img {
            position: relative;
            &:after { 
                @include separator-after( -6px, -11px ); 
            }
            &:before { 
                @include separator-before( -6px, -10px ); 
            }  
        }
    }
    .mejs-time-rail {
        width: 100%;
        @include custom-animation;
        span {
            cursor: pointer; 
            display: block; 
            height: 0.6em; 
            width: 180px; 
            @include border-radius( 0 );
        }
        > span {
            position: relative;
            > span { 
                left: 0; 
                position: absolute; 
                top: 0; 
            } 
        }
        .mejs-time-total {
            background: mix( $total-time-start, $total-time-end ); 
            background: rgba( $total-time-end, $time-rail-opacity ); 
            width: 100%;
            @include bkg( $total-time-start, $total-time-end, $time-rail-opacity );
        }

        .mejs-time-buffer {
            background: rgba( $bkg-buffer, $buffer-opacity );
            width:100%;
            @include bkg( $buffer-start, $buffer-end, $buffer-grdt-opacity );
        }
        .mejs-time-current { 
            background-size: 15px 15px; 
            -webkit-background-size: 15px 15px; 
            -moz-background-size: 15px 15px; 
            -o-background-size: 15px 15px; 
            animation: buffer-stripes 2s linear infinite; 
            -webkit-animation: buffer-stripes 2s linear infinite; 
            -moz-animation: buffer-stripes 2s linear infinite; 
            -ms-animation: buffer-stripes 2s linear infinite; 
            -o-animation: buffer-stripes 2s linear infinite; 
        }
        .mejs-time-loaded {
            background: mix( $time-loaded-start, $time-loaded-end ); 
            background: rgba( $time-loaded-end, $time-rail-opacity ); 
            width: 0;
            @include bkg( $time-loaded-start, $time-loaded-end, $time-rail-opacity );
        }
        .mejs-time-current {
            background: mix( $time-current-start, $time-current-end ); 
            background: rgba( $time-current-end, $time-rail-opacity ); 
            width: 0;
            @include bkg( $time-current-start, $time-current-end, $time-rail-opacity );
        }
        .mejs-time-handle {
            background: #fff; 
            border: 0; 
            cursor: pointer; 
            margin: 0; 
            opacity: $time-handle-opacity; 
            position: absolute; 
            text-align: center; 
            top: 0px; 
            width: 10px;
            @include border-radius( 0 );
        }
        .mejs-time-handle-rewind {
            background-color: $time-nav-bg; 
            background-size: contain; 
            height: 0.8em; 
            left: -0.2em; 
            position: absolute; 
            top: -0.2em; 
            width: 0.8em;
            @include load-component( $cmp-rail-rewind, svg );
            &:focus { 
                background-color: $buttons-focus-bg; 
            }
        }
        .mejs-time-handle-forward {
            background-color: $time-nav-bg; 
            height: 0.8em; 
            position: absolute; 
            right: -1em; 
            top: -0.2em; 
            width: 0.8em;
            @include load-component( $cmp-rail-forward, svg );
            &:focus { 
                background-color: $buttons-focus-bg; 
            }
        }
       
        .mejs-time-float { 
            background: #eee; 
            border: none; 
            color: #111; 
            display: none; 
            height: auto; 
            left: 0; 
            margin-left: -1.49em; 
            padding: 0.2em 0.3em; 
            position: absolute; 
            text-align: center; 
            top: -2.20em; 
            width: auto; 
        }
        .mejs-time-float-current { 
            display: block; 
            height: auto; 
            text-align: center; 
            width: auto; 
        }
        .mejs-time-float-corner {
            border: solid 0.35em #eee; 
            border-color: #eee transparent transparent transparent; 
            bottom: -0.57em; 
            display: block; 
            height: 0; 
            left: 50%; 
            line-height: 0; 
            margin-left: -0.3em; 
            position: absolute; 
            width: 0;
            @include border-radius( 0 );
        } 
    }
    .mejs-volume-button {
        &:hover { 
            @include border-radius( 0 0 4px 4px ); 
        }
        .mejs-volume-slider {
            bottom: 1em; 
            display: none; 
            height: 7.4em; 
            margin: 0; 
            position: absolute; 
            width: 1em; 
            z-index: 1;
            @include border-radius( 5px );
            @include bkg( $bkg-controls-start, $bkg-controls-end, $bkg-controls-opacity ); 
        }
        .mejs-volume-slider {
            .mejs-volume-total,
            .mejs-volume-current {
                height: 5.7em; 
                left: 0.5em; 
                margin: 0; 
                position: absolute; 
                top: 1.2em;                 
            }
            .mejs-volume-total {
                background: mix($total-time-start, $total-time-end); 
                background: rgba($total-time-end, $time-rail-opacity); 
                width: 0.1em;
                @include border-radius( 2px );
                @include bkg( $total-time-start, $total-time-end, $time-rail-opacity ); 
            }
            .mejs-volume-current {
                background: mix($time-current-start, $time-current-end); 
                background: rgba($time-current-end, $time-rail-opacity); 
                width: 0;
                @include border-left-radius( 1px );
                @include bkg( $time-current-start, $time-current-end, $time-rail-opacity );       
            }
            .mejs-volume-handle { display: none; }
            .mejs-volume-plus {
                height: 0.8em; 
                left: 0.1em; 
                position: absolute; 
                top: 0.1em; 
                width: 0.8em;
                @include load-component( $cmp-volume-up, svg );
                &:focus { 
                    background-color: $buttons-focus-bg; 
                }
            }
            .mejs-volume-minus{
                bottom: 0.1em; 
                height: 0.8em; 
                left: 0.1em; 
                position: absolute; 
                width: 0.8em;
                @include load-component( $cmp-volume-down, svg );
                &:focus { 
                    background-color: $buttons-focus-bg; 
                }
            }
        }
        // ::Horizontal version
        .mejs-volume-slider.horizontal {
            height: 1.5em; 
            margin-left: -4.5em; 
            padding-bottom: 0.125em; 
            width: 7.6em;
            
            // ::Check if arrow image is set
            $vol-arrow-img: false !default;

            @if $vol-arrow-img {
                bottom: 2.300em;
                overflow: visible;
                &:after { 
                    @include load-component( $vol-arrow-img ); 
                    content: ''; 
                    height: 1.1em; 
                    position: absolute; 
                    right: -2.813em; 
                    top: 0.875em; 
                    width: 5.662em; 
                }
            }
            .mejs-volume-total { 
                height: 0.813em; 
                left: 1.500em; 
                padding: 1px 0; 
                top: 0.450em; 
                width: 5.300em; 
            }
            .mejs-volume-current { 
                height: 0.813em; 
                left: 1.500em; 
                margin-left: 1px; 
                margin-top: 1px; 
                max-width: 5.200em; 
                top: 0.450em; 
                width: 5.300em;
            }
            .mejs-volume-handle { 
                cursor: e-resize; 
                height: 0.8em; 
                left: 1.1em; 
                top: 0.15em; 
                width: 6px; 
            }
            .mejs-volume-plus { 
                left: 6.410em; 
                top: 0.325em; 
            }
            .mejs-volume-minus { 
                left: 0.190em; 
                top: 0.375em; 
            }
        } 
    }

    // ::End > TRACK (Captions and Chapters)
    .mejs-captions-button {
        &.activeButton { 
            background-color: $buttons-active-bg;
        }
        .mejs-captions-selector { 
            background: url( $img-background ); 
            background: rgba(50, 50, 50, 0.7); 
            border: solid 1px transparent; 
            bottom: 26px; 
            height: 100px; 
            overflow: hidden; 
            padding: 10px; 
            position: absolute; 
            right: -10px; 
            visibility: hidden; 
            width: 130px;
            @include border-radius( 0 );
            ul {
                display: block; 
                list-style-type: none !important; 
                margin: 0; 
                overflow: hidden; 
                padding: 0;
                li {
                    display: block; 
                    color: #fff; 
                    list-style-type: none !important; 
                    margin: 0 0 6px 0; 
                    overflow: hidden; 
                    padding: 0; 
                    input { 
                        clear: both; 
                        float: left; 
                        margin: 3px 3px 0 5px; 
                    }
                    label { 
                        font: 10px $font-main; 
                        float: left; 
                        line-height: 15px; 
                        padding: 4px 0 0 0; 
                        width: 100px; 
                    } 
                } 
            } 
        }
        .mejs-captions-translations { 
            font-size: 10px; 
            margin: 0 0 5px 0; 
        } 
    } 
}
.mejs-chapters {
    left: 0; 
    position: absolute; 
    top: 0; 
    -xborder-right: solid 1px #fff; 
    width: 10000px;
    .mejs-chapter {    
        background: $chapter-end; 
        background: rgba($chapter-end, $chapter-opacity); 
        border: 0; 
        float: left; 
        overflow: hidden; 
        position: absolute; 
        @include background-image(linear-gradient(rgba($chapter-start, $chapter-opacity), rgba($chapter-end, $chapter-opacity)));
        @include filter-gradient($chapter-start, $chapter-end);
        .mejs-chapter-block { 
            border-bottom: solid 1px #333; 
            border-right: solid 1px #333; 
            color: $font-main-color; 
            cursor: pointer; 
            display: block; 
            font-size: $font-main-size; 
            padding: 5px; 
        }
        .mejs-chapter-block-last { 
            border-right: none; 
        }
        .mejs-chapter-block {
            &:hover {
                background: $chapter-hover-end; 
                background: rgba($chapter-hover-end, $chapter-hover-opacity);
                @include background-image(linear-gradient(rgba($chapter-hover-start, $chapter-hover-opacity), rgba($chapter-hover-end, $chapter-hover-opacity)));
                @include filter-gradient($chapter-hover-start, $chapter-hover-end); 
            }
            .ch-title,
            .ch-timespan {
                display: block; 
                font-size: 12px;
                line-height: 12px; 
                text-overflow: ellipsis; 
                white-space: nowrap; 
            }
            .ch-title {                  
                font-weight: bold;                 
                margin: 0 0 3px 0;  
            }
            .ch-timespan { 
                margin: 3px 0 4px 0; 
            } 
        } 
    } 
}
.mejs-captions-layer {
    bottom: 0; 
    color: #fff; 
    font-size: $font-caption-size; 
    left: 0; 
    line-height: 1.575em; 
    position: absolute; 
    text-align: center;
    a { 
        color: #fff; 
        text-decoration: underline; 
    }
    &[lang=ar] { 
        font-size: 1.25em; 
        font-weight: normal; 
    } 
}
.mejs-captions-position { 
    bottom: 2em; 
    left: 0; 
    position: absolute; 
    width: 100%; 
}
.mejs-captions-position-hover { 
    bottom: 2.5em; 
}
.mejs-captions-text { 
    background: url( $img-background ); 
    background: rgba(20, 20, 20, 0.8); 
    padding: 3px 5px; 
}
.mejs-clear { 
    clear: both; 
}
.me-cannotplay {
    a { 
        color: #fff; 
        font-weight: bold; 
    }
    span { 
        display: block; 
        padding: 15px; 
    } 
}
.mejs-controls {
    .mejs-loop-off button { 
        background: transparent url( $cmp-loop-off ) no-repeat; 
        background-size: contain; 
    }
    .mejs-loop-on button { 
        background: transparent url( $cmp-loop-on ) no-repeat; 
        background-size: contain; 
    }
    .mejs-backlight-off button { 
        background: transparent url( $cmp-backlight-off ) no-repeat; 
        background-size: contain; 
    }
    .mejs-backlight-on button { 
        background: transparent url( $cmp-backlight-on ) no-repeat; 
        background-size: contain; 
    }
    .mejs-picturecontrols-button { 
        background: transparent url( $cmp-picturecontrols ) no-repeat; 
        background-size: contain; 
    } 
}
.mejs-contextmenu {
    background: #fff; 
    border: solid 1px #999; 
    left: 0; 
    padding: 10px; 
    position: absolute; 
    top: 0; 
    width: 150px; 
    z-index: 1001;
    @include border-radius(4px);
    // ::Fullscreen
    .mejs-contextmenu-separator { 
        background: #333; 
        height: 1px; 
        font-size: 0; 
        margin: 5px 6px; 
    }
    .mejs-contextmenu-item { 
        color: #333; 
        cursor: pointer; 
        font-family: $font-main; 
        font-size: 0.75em; 
        padding: 4px 6px;
        &:hover { 
            background: #2C7C91; 
            color: #fff; 
        } 
    } 
}
.mejs-controls .mejs-sourcechooser-button { 
    position: relative; 
}
.mejs-controls .mejs-sourcechooser-button button { 
    background-position: -128px 0; 
}
.mejs-controls .mejs-sourcechooser-button .mejs-sourcechooser-selector {
    background: url( 'background.png' ); 
    background: rgba(50,50,50,0.7); 
    border: solid 1px transparent; 
    bottom: 26px; 
    height: 100px; 
    overflow: hidden; 
    padding: 10px; 
    position: absolute; 
    right: -10px; 
    visibility: hidden; 
    width: 130px;   
    @include border-radius( 0px );
    ul {
        display: block; 
        list-style-type: none !important; 
        margin: 0; 
        overflow: hidden; 
        padding: 0;
        li {
            color: #fff; 
            display:block; 
            list-style-type: none !important; 
            margin: 0 0 6px 0; 
            overflow: hidden; 
            padding: 0; 
            input {
                clear: both; 
                float: left; 
                margin: 3px 3px 0 5px;
            }
            label {
                float: left; 
                font-family: $font-main; 
                font-size: 0.625em; 
                line-height: 0.9375em; 
                padding: 4px 0 0 0; 
                width: 100px;
            }
        }        
    }
}
// ::IE
.no-svg {
    .mejs-tooltip { 
        @include load-component( $cmp-tooltip, png, "center center" ); 
    }
    .mejs-controls {
        .mejs-play button { 
            @include load-component( $cmp-play, png, "center center" ); 
        }    
        .mejs-pause button { 
            @include load-component( $cmp-pause, png, "center center" ); 
        }   
        .mejs-stop button { 
            @include load-component( $cmp-stop, png, "center center" ); 
        }    
        .mejs-fullscreen-button button { 
            @include load-component( $cmp-fullscreen, png, "center center" );
            margin: 0; 
        }    
        .mejs-unfullscreen button { 
            @include load-component( $cmp-unfullscreen, png, "center center" );
            margin: 0; 
        }
        .mejs-mute button { 
            @include load-component( $cmp-mute, png, "center center" ); 
        }    
        .mejs-unmute button { 
            @include load-component( $cmp-unmute, png, "center center" ); 
        }    
        .mejs-captions-button {
            position: relative;
            button { 
                @include load-component( $cmp-caption, png, "center center" ); 
            } 
        }
        .mejs-loop-off button { 
            @include load-component( $cmp-loop-off, png, "center center" ); 
        }    
        .mejs-loop-on button { 
            @include load-component( $cmp-loop-on, png, "center center" ); 
        }    
        .mejs-backlight-off button { 
            @include load-component( $cmp-backlight-off, png, "center center" ); 
        }    
        .mejs-backlight-on button { 
            @include load-component( $cmp-backlight-on, png, "center center" );
        }    
        .mejs-picturecontrols-button { 
            @include load-component( $cmp-picturecontrols, png, "center center" ); 
        }    
        .mejs-time-rail {      
            .mejs-time-handle-rewind { 
                background-color: $time-nav-bg; }  
                @include load-component( $cmp-rail-rewind, png, "center center" );     
            .mejs-time-handle-forward { 
                background-color: $time-nav-bg; 
                @include load-component( $cmp-rail-forward, png, "center center" ); 
            }
        }
        .mejs-volume-button {
            .mejs-volume-slider, .mejs-volume-slider.horizontal {
                background-color: $vol-slider-bg;        
                .mejs-volume-plus { 
                    background-color: $vol-plus-minus-bg;
                    @include load-component( $cmp-volume-up, png, "center center" );  
                }        
                .mejs-volume-minus {  
                    background-color: $vol-plus-minus-bg; 
                    @include load-component( $cmp-volume-down, png, "center center" );
                }
            }
        } 
    }
    .mejs-volume-slider.horizontal {
        @if $vol-arrow-img {
            &:after { 
                @include load-component( $vol-arrow-img, png ); 
                height: emify( image-height( get-img( $vol-arrow-img, png ) ) ); 
                position: absolute; 
                top: 1.600em; 
            }
        }
    }
    .mejs-duration-container span:after { 
        position: static; 
    }
}
// ::Helpers
.visuallyhidden {
    border: 0; 
    clip: rect(0 0 0 0); 
    height: 1px; 
    margin: -1px; 
    overflow: hidden; 
    padding: 0; 
    position: absolute; 
    width: 1px;
    &.focusable {
        &:active, &:focus { 
            clip: auto; 
            height: auto; 
            margin: 0; 
            overflow: visible; 
            position: static; 
            width: auto; 
        } 
    } 
}
.invisible { 
    display: none; 
}